#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp F         &kp P                     &kp B                                                     &kp J        &kp L  &kp U        &kp Y    &kp SEMICOLON
&kp A      &kp R         &kp S         &kp T                     &kp G        &kp LS(LG(S))      &kp MINUS                 &kp M        &kp N  &lt 5 E      &kp I    &kp O
&kp Z      &kp X         &kp C         &kp D                     &kp V        &kp ESCAPE         &kp SEMICOLON             &kp K        &kp H  &lt 5 COMMA  &kp DOT  &kp SLASH
&kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &mt LCMD INTERNATIONAL_1  &lt 1 SPACE  &mt LCTRL TAB      &mt LEFT_SHIFT BACKSPACE  &lt 2 ENTER                               &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp UP DOWN>;
        };

        FUNCTION {
            bindings = <
&kp LS(LG(E))     &kp LS(LA(LC(LG(W))))  &kp LS(LA(LC(LG(R))))  &kp LS(LA(LC(LG(T))))  &kp DELETE                      &kp F2    &kp F4    &kp F12   &trans     &trans
&kp LC(LG(LEFT))  &kp LC(LG(RIGHT))      &kp LEFT_SHIFT         &kp BACKSPACE          &kp ENTER   &trans      &trans  &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans
&kp LC(LG(UP))    &trans                 &trans                 &trans                 &trans      &trans      &trans  &trans    &kp END   &kp HOME  &trans     &trans
&trans            &trans                 &trans                 &mo 6                  &trans      &trans      &trans  &mo 3                                    &trans
            >;
        };

        NUM {
            bindings = <
&kp N5       &kp N3         &kp N1         &kp N9               &kp N7                            &kp N6         &kp N8        &kp N0      &kp N2        &kp N4
&kp SQT      &kp LS(POUND)  &kp LS(UNDER)  &kp LS(LPAR)         &kp LS(RPAR)  &trans      &trans  &kp LS(PRCNT)  &kp EQUAL     &kp MINUS   &kp LS(STAR)  &kp LS(PLUS)
&kp LS(DQT)  &kp LS(CARET)  &kp LS(DLLR)   &kp LBKT             &kp RBKT      &trans      &trans  &kp LS(COLON)  &kp LS(EXCL)  &kp LS(LT)  &kp LS(GT)    &kp FSLH
&trans       &trans         &trans         &kp INTERNATIONAL_2  &mo 3         &trans      &trans  &trans                                                 &trans
            >;
        };

        NUM2 {
            bindings = <
&trans    &trans     &trans      &trans        &trans                            &trans         &trans     &trans         &trans        &trans
&kp BSLH  &kp GRAVE  &kp LS(AT)  &kp LS(LBRC)  &kp LS(RBRC)  &trans      &trans  &kp LS(PRCNT)  &kp EQUAL  &kp LS(TILDE)  &kp LS(AMPS)  &kp LS(PIPE)
&trans    &trans     &trans      &trans        &trans        &trans      &trans  &trans         &trans     &trans         &trans        &trans
&trans    &trans     &trans      &trans        &trans        &trans      &trans  &trans                                                 &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        BT {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
